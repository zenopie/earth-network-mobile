plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'com.google.protobuf' // Protobuf generation plugin
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.22'
}

// Load keystore properties
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = 'network.erth.wallet'
    compileSdk = 35

    defaultConfig {
        applicationId = "network.erth.wallet"
        minSdk = 24
        targetSdk = 35
        versionCode = 14
        versionName = "1.0.9"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            // Add version info to APK name for release tracking
            applicationIdSuffix ""
            versionNameSuffix ""
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
        freeCompilerArgs += [
            "-opt-in=kotlin.RequiresOptIn"
        ]
    }
    
    lint {
        abortOnError = false
        checkReleaseBuilds = false
        disable = ['NotificationPermission']
    }

    sourceSets {
        debug {
            java {
                srcDirs = ['build/generated/source/proto/debug/java']
            }
        }
        release {
            java {
                srcDirs = ['build/generated/source/proto/release/java']
            }
        }
    }

    packaging {
        resources {
            excludes += ['META-INF/LICENSE*', 'META-INF/NOTICE*', 'META-INF/DEPENDENCIES', 'META-INF/INDEX.LIST']
        }
    }
}
 
protobuf {
    // Use protoc 3.21.x compatible with protobuf-javalite
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.12"
    }
    // Configure generation to use the lite runtime
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Generate Java lite (javalite) sources for Android compatibility
                java {
                    option 'lite'
                }
            }
        }
    }
}

 
// Dependency resolution to avoid BouncyCastle duplicates
configurations.configureEach {
    exclude group: 'org.bouncycastle', module: 'bcprov-jdk15to18'
}

dependencies {
    // Dependency constraints to avoid BouncyCastle conflicts
    constraints {
        implementation('org.bouncycastle:bcprov-jdk15on:1.70')
        implementation('org.bouncycastle:bcpkix-jdk15on:1.70')
    }

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'

    // Android
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    
    // Vector Drawable Support
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    
    // Using Material Design filled icons only (no outlined/grey ones)
    
    // Remove these - not needed for icons
    implementation('org.bitcoinj:bitcoinj-core:0.16.3') { exclude group: 'org.bouncycastle' }
    
    // JMRTD library for reading ePassports - stable version
    implementation ('org.jmrtd:jmrtd:0.7.18') {
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
        exclude group: 'org.bouncycastle', module: 'bcprov-jdk14'
        exclude group: 'org.bouncycastle', module: 'bcpkix-jdk15on'
        exclude group: 'net.sf.scuba', module: 'scuba-sc-android'
    }
    
    // Required dependencies for JMRTD
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.70'
    implementation 'net.sf.scuba:scuba-sc-android:0.0.23'

    // SLF4J Android binding for JMRTD logging
    implementation 'org.slf4j:slf4j-android:1.7.36'
    
    // For handling images in passport
    implementation 'com.github.mhshams:jnbis:1.1.0'
    // GIF rendering (Glide)
    implementation 'com.github.bumptech.glide:glide:4.15.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.15.1'
    
    // QR Code generation
    implementation 'com.google.zxing:core:3.5.2'
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    
    // Google AdMob for advertisements
    implementation 'com.google.android.gms:play-services-ads:22.6.0'

    // Google Play In-App Updates
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:app-update-ktx:2.1.0'
    
    // ML Kit Text Recognition for camera-based MRZ scanning
    implementation 'com.google.android.gms:play-services-mlkit-text-recognition:19.0.0'
    // CameraX for camera functionality
    implementation 'androidx.camera:camera-core:1.3.0'
    implementation 'androidx.camera:camera-camera2:1.3.0'
    implementation 'androidx.camera:camera-lifecycle:1.3.0'
    implementation 'androidx.camera:camera-view:1.3.0'
    
    // Protobuf dependencies for Cosmos SDK transaction encoding (lite version for Android)
    implementation 'com.google.protobuf:protobuf-javalite:3.21.12'
    
    // JSON serialization for permits
    implementation 'com.google.code.gson:gson:2.10.1'

    // SecretK - Kotlin client for Secret Network
    implementation 'io.eqoty.secretk:client-jvm:7.0.0'

    // Kotlinx serialization for permit serialization (used by SecretK)
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0'

    // Keep old crypto dependencies for existing code (TODO: migrate everything to SecretK)
    implementation 'org.whispersystems:curve25519-java:0.5.0'
    implementation 'org.cryptomator:siv-mode:1.4.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}